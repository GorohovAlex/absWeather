version: '3.4'

volumes:
  redis:
  postgres:
  server_app:
services:
  db:
    image: postgres:11
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
  in_memory_store:
    image: redis:4-alpine
    expose:
      - 6379
    volumes:
      - redis:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
  server_app: &server_app
    build: .
    command: bundle exec rails server --binding 0.0.0.0
    entrypoint: "./docker-entrypoint.sh"
    depends_on:
      - db
      - in_memory_store
    tty: true
    stdin_open: true
    restart: on-failure
    environment: &server_app_env
      RAILS_ENV: development
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: abs_weather_development
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      REDIS_DB: "redis://in_memory_store:6379"
      SECRET_KEY_BASE: STUB
      DEVISE_SECRET_KEY: STUB
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
  # server_worker_app:
  #   <<: *server_app
  #   command: bundle exec sidekiq -C config/sidekiq.yml
  #   entrypoint: ''
  #   ports: []
  #   depends_on:
  #     - db
  #     - server_app
  #     - in_memory_store
  #   healthcheck:
  #     test: ["CMD-SHELL", "ps ax | grep -v grep | grep sidekiq || exit 1"]
